resourcesDir=./src/main/resources

# ===== Quarkus config =====

quarkus.config.locations=${resourcesDir}/channel.properties

quarkus.http.host=localhost
quarkus.http.port=8080
quarkus.http.non-application-root-path=scuservice

quarkus.kafka.devservices.port=49156
quarkus.kafka.devservices.topic-partitions.segment-ready=5
%prod.kafka.bootstrap.servers=localhost:49156
#kafka.bootstrap.servers=localhost:9092
quarkus.kafka.health.enabled=false

quarkus.smallrye-health.root-path=health
quarkus.smallrye-health.liveness-path=isAlive
quarkus.smallrye-health.readiness-path=isReady
quarkus.smallrye-health.ui.always-include=true

quarkus.log.min-level=DEBUG
quarkus.log.category."com.charter.pauselive.scu".level=DEBUG
quarkus.log.category."com.charter.pauselive.scu.kafka.Seeker_Subclass".level=OFF
quarkus.log.category."com.charter.pauselive.scu.kafka.Seeker".level=OFF

# ===== App specific =====

# equals to 2022-01-01T00:00:00Z
observer.debug.mode=true
observer.history.track=false
readycopy.seek.before.sec=12
consumer.copyready.request.batch=128

readykey.time.anchor=1641020400
readykey.cache.ttl.seconds=60
readykey.cache.prune.every.sec=5s
readykey.key.bucket.sec=5

keyfinder.try.every.sec=4s
keyfinder.try.num=3
keyfinder.copyready.segments.limit=200
keyfinder.readykey.queue.threshold=128

dispatcher.segmentready.topic=segment-ready
dispatcher.seekers.limit=50
seeker.poll.duration.milli=1000
seeker.poll.tries=3

