customSerdesDir=com.charter.pauselive.scu.kafka.serdes
serdesDir=io.quarkus.kafka.client.serialization
activateSampleProducers=true

# =================================================================
# ===== Producers =====

mp.messaging.outgoing.segment-ready-topic-alt.connector=smallrye-kafka
mp.messaging.outgoing.segment-ready-topic-alt.topic=segment-ready-tmp
mp.messaging.outgoing.segment-ready-topic-alt.max.request.size=20971520
mp.messaging.outgoing.segment-ready-topic-alt.partitioner.class=org.apache.kafka.clients.producer.UniformStickyPartitioner
mp.messaging.outgoing.segment-ready-topic-alt.value.serializer=org.apache.kafka.common.serialization.ByteArraySerializer

mp.messaging.outgoing.fallback-topic.connector=smallrye-kafka
mp.messaging.outgoing.fallback-topic.topic=segment-downloader
mp.messaging.outgoing.fallback-topic.key=scu-fallback-${quarkus.uuid}
mp.messaging.outgoing.fallback-topic.partitioner.class=org.apache.kafka.clients.producer.UniformStickyPartitioner
mp.messaging.outgoing.fallback-topic.value.serializer=${serdesDir}.ObjectMapperSerializer

# ===== Consumers =====

mp.messaging.incoming.ready-key-topic.connector=smallrye-kafka
mp.messaging.incoming.ready-key-topic.topic=segment-ready-keys
mp.messaging.incoming.ready-key-topic.group.id=ready-group-${quarkus.uuid}
mp.messaging.incoming.ready-key-topic.consumer-rebalance-listener.name=ready-key-listener
mp.messaging.incoming.ready-key-topic.commit-strategy=ignore
mp.messaging.incoming.ready-key-topic.failure-strategy=ignore
mp.messaging.incoming.ready-key-topic.value-deserialization-failure-handler=ready-key-handler
mp.messaging.incoming.ready-key-topic.value.deserializer=${customSerdesDir}.ReadyKeyDeserializer

mp.messaging.incoming.copy-ready-topic.connector=smallrye-kafka
mp.messaging.incoming.copy-ready-topic.topic=segment-copy-from-ready
mp.messaging.incoming.copy-ready-topic.group.id=copy-ready-group
mp.messaging.incoming.copy-ready-topic.consumer-rebalance-listener.name=ready-copy-listener
mp.messaging.incoming.copy-ready-topic.commit-strategy=ignore
mp.messaging.incoming.copy-ready-topic.failure-strategy=ignore
mp.messaging.incoming.copy-ready-topic.value-deserialization-failure-handler=copy-ready-handler
mp.messaging.incoming.copy-ready-topic.value.deserializer=${customSerdesDir}.CopyReadyDeserializer

# ===== Samples =====

mp.messaging.outgoing.ready-key-sample-out.connector=smallrye-kafka
mp.messaging.outgoing.ready-key-sample-out.topic=segment-ready-keys
mp.messaging.outgoing.ready-key-sample-out.value.serializer=${serdesDir}.ObjectMapperSerializer

mp.messaging.outgoing.segment-ready-sample-out.connector=smallrye-kafka
mp.messaging.outgoing.segment-ready-sample-out.topic=segment-ready
mp.messaging.outgoing.segment-ready-sample-out.value.serializer=${serdesDir}.ObjectMapperSerializer

mp.messaging.outgoing.copy-from-sample-out.connector=smallrye-kafka
mp.messaging.outgoing.copy-from-sample-out.topic=segment-copy-from-ready
mp.messaging.outgoing.copy-from-sample-out.value.serializer=${serdesDir}.ObjectMapperSerializer

mp.messaging.incoming.segment-ready-sample-in.connector=smallrye-kafka
mp.messaging.incoming.segment-ready-sample-in.topic=segment-ready
mp.messaging.incoming.segment-ready-sample-in.group.id=segment-ready-sample
mp.messaging.incoming.segment-ready-sample-in.commit-strategy=ignore
mp.messaging.incoming.segment-ready-sample-in.value.deserializer=${customSerdesDir}.SegmentReadyDeserializer

# === enable/disable

mp.messaging.incoming.ready-key-topic.enabled=true
mp.messaging.incoming.copy-ready-topic.enabled=true
mp.messaging.outgoing.fallback-topic.enabled=true
mp.messaging.outgoing.segment-ready-topic-alt.enabled=true

mp.messaging.incoming.segment-ready-sample-in.enabled=${activateSampleProducers}
mp.messaging.outgoing.segment-ready-sample-out.enabled=${activateSampleProducers}
mp.messaging.outgoing.ready-key-sample-out.enabled=${activateSampleProducers}
mp.messaging.outgoing.copy-from-sample-out.enabled=${activateSampleProducers}

